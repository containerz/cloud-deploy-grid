---
- name: create dcos directories
  file:
    path: /dcos/genconf
    state: directory
  tags:
    - terminal

- name: create ipdetect script
  template:
    src: dcos/genconf/ip-detect
    dest: /dcos/genconf/ip-detect
    owner: root
    group: root
    mode: 0755
  tags:
    - terminal

- debug: msg="{{ nameserver }}"
- debug: msg="{{ dns_domain }}"
- debug: msg="{{ groups['dcos_masters'] }}"
- debug: msg="{{ dcos_user }}"
- debug: msg="{{ dcos_pass }}"

- name: create dcos config
  template:
    src: dcos/genconf/config.json
    dest: /dcos/genconf/config.json
    owner: root
    group: root
    mode: 0644
  tags:
    - terminal

- shell: cat /dcos/genconf/config.json
  register: dcos_conf_json

- set_fact: dcos_conf_yaml="{{ dcos_conf_json.stdout | from_json | to_nice_yaml }}"

- name: save dcos conf as yaml
  copy:
    content: "{{ dcos_conf_yaml }}"
    dest: /dcos/genconf/config.yaml
    owner: root
    group: root
    mode: 0644

- name: download dcos setup file
  get_url:
    url: https://downloads.dcos.io/dcos/EarlyAccess/dcos_generate_config.sh
    #url: https://s3.amazonaws.com/downloads.mesosphere.io/dcos/testing/CM.7/dcos_generate_config.ee.sh
    dest: /dcos/dcos_generate_config.sh
    mode: 0755
  tags:
    - terminal

- name: extract dcos setup content
  command: ./dcos_generate_config.sh
  args:
    chdir: /dcos
    creates: /path/to/database

- name: dcos setup container
  docker:
    name: nginx
    image: nginx
    state: started
    ports:
      - "28080:80"
    volumes:
      - "/dcos/genconf/serve:/usr/share/nginx/html:ro"